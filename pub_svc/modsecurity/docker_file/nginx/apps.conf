# ---------- upstreams (예시) ----------
upstream wp_backend       { server my_wordpress:80; keepalive 32; }
upstream nc_backend       { server 10.0.2.100:80; keepalive 32; }
upstream nc_notify_backend { server 10.0.2.100:7867; keepalive 32; }
upstream mw_backend       { server my_mediawiki:80; keepalive 32; }
upstream gf_backend  { server 10.0.2.100:3010; keepalive 64; }

server {
  listen 80;
  server_name lucky-gun.com;

  client_max_body_size 127m;

  # ✅ 기본 ON (서버 블록 레벨에서 한 번만 지정)
  modsecurity on;
  modsecurity_rules_file /etc/modsecurity/modsecurity.conf;

  # --- 민감/숨김/백업 파일 차단 ---
  location ~* /\.(?!well-known)               { deny all; }
  location ~* /(wp-config\.php|readme\.html|license\.txt|composer\.(json|lock)|package\.json)$ { deny all; }
  location ~* \.(bak|old|orig|backup|swp|dist|sql|tar|gz|zip)$ { deny all; }
  location = /wp-config-sample.php { deny all; }
  location ~* ^/wp-content/(?:debug\.log|db-error\.php)$ { deny all; }
  location ~* ^/wp-includes/.*\.php$ { deny all; }

  # --- 업로드 폴더 내 PHP 실행 금지 ---
  location ~* ^/wp-content/uploads/.*\.php$   { deny all; }



  # --- 정적 자원은 WAF OFF (부하 절감 및 오탐 방지) ---
  location ~* \.(?:css|js)(?:\?v=\w+)?$ {
    modsecurity off;
    proxy_pass http://wp_backend;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000, immutable" always;
    access_log off;
  }
  location ~* \.(?:jpg|jpeg|gif|png|ico|svg|webp|avif|woff2?|ttf|eot)$ {
    modsecurity off;
    proxy_pass http://wp_backend;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000" always;
    access_log off;
  }

  # --- XML-RPC 차단 (권장) ---
  location = /xmlrpc.php {
      modsecurity_rules '
      SecRuleEngine On
      SecRule REQUEST_URI "@endsWith /xmlrpc.php" \
        "id:999120,phase:1,deny,status:403,log,tag:\'app:wordpress\',msg:\'Block WordPress XML-RPC\'"
    ';
  }

  # --- 로그인/관리자: 캐시 금지 및 레이트리밋은 Traefik에서 처리 ---
  location = /wp-login.php {
    add_header Cache-Control "no-store" always;
    proxy_pass http://wp_backend;
  }
  location ^~ /wp-admin/ {
    add_header Cache-Control "no-store" always;
    proxy_pass http://wp_backend;
  }

    # --- WordPress 특화 ModSecurity 완화(오탐 감소) ---------------------
  # 1) admin-ajax: 콘텐츠/코드성 파라미터에서 941(XSS)/942(SQLi) 타깃 제외
  location = /wp-admin/admin-ajax.php {
    proxy_pass http://wp_backend;
    modsecurity_rules '
      SecRuleEngine On

      # 댓글/콘텐츠/커스텀CSS 등 코드성 파라미터
      SecRule REQUEST_METHOD "@streq POST" "phase:1,pass,nolog,chain,id:900100"
      SecRule REQUEST_URI "@streq /wp-admin/admin-ajax.php" "t:none, \
        ctl:ruleRemoveTargetById=941100;ARGS:comment, \
        ctl:ruleRemoveTargetById=941100;ARGS:comment_content, \
        ctl:ruleRemoveTargetById=941100;ARGS:content, \
        ctl:ruleRemoveTargetById=942440;ARGS:comment, \
        ctl:ruleRemoveTargetById=942440;ARGS:comment_content, \
        ctl:ruleRemoveTargetById=942440;ARGS:content, \
        ctl:ruleRemoveTargetById=942100;ARGS:content, \
        ctl:ruleRemoveTargetById=942110;ARGS:content"
    ';
  }

  # 2) REST API: /wp-json/ 아래 에디터 필드 오탐 완화
  location ^~ /wp-json/ {
    proxy_pass http://wp_backend;
    modsecurity_rules '
      SecRuleEngine On
      SecRule REQUEST_METHOD "@rx ^(POST|PUT|PATCH)$" "phase:1,pass,nolog,chain,id:900120"
      SecRule REQUEST_URI "@beginsWith /wp-json/" "t:none, \
        ctl:ruleRemoveTargetById=941100;ARGS:content, \
        ctl:ruleRemoveTargetById=942440;ARGS:content, \
        ctl:ruleRemoveTargetById=942100;ARGS:content, \
        ctl:ruleRemoveTargetById=942110;ARGS:content"
    ';
  }

  # 3) 댓글 포스트: XSS/SQLi 오탐 파라미터 제한
  location = /wp-comments-post.php {
    proxy_pass http://wp_backend;
    modsecurity_rules '
      SecRuleEngine On
      SecRule REQUEST_METHOD "@streq POST" "phase:1,pass,nolog,chain,id:900140"
      SecRule REQUEST_URI "@streq /wp-comments-post.php" "t:none, \
        ctl:ruleRemoveTargetById=941100;ARGS:comment, \
        ctl:ruleRemoveTargetById=942440;ARGS:comment"
    ';
  }

  # 4) 검색 파라미터(s, search)에서 942(SQLi) 일부 오탐 완화
  location / {
    # 허용 메서드 제한(기본 보안)
    limit_except GET HEAD POST OPTIONS { deny all; }

    # 검색어는 특수문자 포함 가능 → SQLi계열 오탐 완화
    modsecurity_rules '
      SecRuleEngine On
      SecRule REQUEST_METHOD "@rx ^(GET|POST)$" "phase:1,pass,nolog,chain,id:900160"
      SecRule REQUEST_URI "@rx ." "t:none, \
        ctl:ruleRemoveTargetById=942100;ARGS:s, \
        ctl:ruleRemoveTargetById=942110;ARGS:s, \
        ctl:ruleRemoveTargetById=942190;ARGS:s, \
        ctl:ruleRemoveTargetById=942200;ARGS:s, \
        ctl:ruleRemoveTargetById=942100;ARGS:search, \
        ctl:ruleRemoveTargetById=942110;ARGS:search, \
        ctl:ruleRemoveTargetById=942190;ARGS:search, \
        ctl:ruleRemoveTargetById=942200;ARGS:search"
    ';

    proxy_pass http://wp_backend;
  }

  proxy_hide_header X-Powered-By;
  add_header X-Powered-By "";
}

server {
  listen 80;
  server_name cloud.lucky-gun.com;

  client_max_body_size 10G;

  # 서버 레벨: ModSecurity OFF (명시)
  modsecurity off;

  # --- 표준 well-known 리다이렉트 (캘/카드DAV·웹핑거·노드인포·비번변경) ---
  location = /.well-known/carddav     { return 301 /remote.php/dav; }
  location = /.well-known/caldav      { return 301 /remote.php/dav; }
  location = /.well-known/webfinger   { return 301 /index.php/.well-known/webfinger; }
  location = /.well-known/nodeinfo    { return 301 /index.php/.well-known/nodeinfo; }
  location = /.well-known/change-password { return 301 /index.php/settings/user; }


  location = /push           { return 308 /push/; }
  location = /index.php/push { return 308 /push/; }
  # ✅ notify_push 전용 (WebSocket)
  location ^~ /push/ {
    add_header X-From "modsec-push" always;
    proxy_pass http://nc_notify_backend;
    proxy_http_version 1.1;
    proxy_read_timeout 3600;
    proxy_send_timeout 3600;
    # Upgrade/Connection은 전역에서 이미 맵/헤더 세팅 완료
  }
  location ~ ^/index\.php/push/(.*)$ {
     return 308 /push/$1;
  }

  # OCS(API) 범위 — apps, cloud/users, cloud/capabilities 등
  location ~ ^/ocs/v[12]\.php/(apps|cloud/(users|capabilities)) {
    modsecurity on;
    modsecurity_rules_file /etc/modsecurity/modsecurity.conf;
    modsecurity_rules 'SecRuleEngine DetectionOnly';
    proxy_pass http://nc_backend;
    proxy_http_version 1.1;

    # OCS 전용 헤더는 여기서만 부여
    proxy_set_header OCS-APIRequest    "true";
    proxy_set_header X-Requested-With  "XMLHttpRequest";

    proxy_set_header Connection "";  # 불필요 헤더 제거(안전)
  }

  # 설정 화면
  location ~ ^/index\.php/settings/(apps|users|admin) {
    modsecurity on;
    modsecurity_rules_file /etc/modsecurity/modsecurity.conf;
    modsecurity_rules 'SecRuleEngine DetectionOnly';
    proxy_pass http://nc_backend;
    proxy_http_version 1.1;
  }

  # 2) 업로드·프리뷰·WebDAV 업로드 경로 (업로드 파이프라인 직결)
  location ~ (?:/index\.php/apps/files/ajax/upload\.php|/remote\.php/dav/(?:bulk|uploads/)|/index\.php/core/preview\.png) {
    proxy_pass http://nc_backend;
    client_max_body_size 10G;

      # ⬇️ 여기 수정
    modsecurity on;
    modsecurity_rules_file /etc/modsecurity/modsecurity.conf;
    modsecurity_rules '
    SecRuleEngine On
    SecRequestBodyLimit 1073741824
    SecRequestBodyNoFilesLimit 1073741824
    ';

    proxy_request_buffering off;
    proxy_read_timeout 3600;
    send_timeout 3600;
    proxy_http_version 1.1;
  }

  # 3) 대용량 다운로드 스트리밍 최적화
  location ^~ /remote.php/dav/files/ {
    proxy_pass http://nc_backend;
    proxy_buffering off;
    proxy_max_temp_file_size 0;
    # WAF: 최소 로드 (다운로드 구간은 바디 한도 불필요)
    modsecurity on;
    modsecurity_rules_file /etc/modsecurity/modsecurity.conf;
    modsecurity_rules 'SecRuleEngine On';

    proxy_read_timeout 3600;
    send_timeout 3600;
    proxy_http_version 1.1;
  }

  location / {
  modsecurity on;
  modsecurity_rules_file /etc/modsecurity/modsecurity.conf;
  modsecurity_rules '
    SecRuleEngine On

    # WebDAV 메서드에서 잦은 오탐 룰만 제한적으로 해제 (예: 920420/920230 등)
    SecRule REQUEST_METHOD "@pm PROPFIND MOVE COPY REPORT MKCOL" \
      "phase:1,pass,nolog,id:910010, \
       ctl:ruleRemoveById=920420, \
       ctl:ruleRemoveById=920230"

    # DAV Destination 헤더/파라미터에서만 특정 SQLi 룰 타깃 축소 (예: 942100/942110)
    SecRule REQUEST_URI "@beginsWith /remote.php/dav" \
      "phase:1,pass,nolog,id:910011, \
       ctl:ruleRemoveTargetById=942100;ARGS:destination, \
       ctl:ruleRemoveTargetById=942110;ARGS:destination"
  ';
  proxy_pass http://nc_backend;
  proxy_http_version 1.1;
  }
}

# ---------- MediaWiki ----------
server {
  listen 80;
  server_name wiki.lucky-gun.com;

  client_max_body_size 128m;

  limit_req_status 429;

    # ========== ModSecurity 기본 ==========
  # 기본 on, 정적/리소스 경로는 off로 성능 확보
  modsecurity on;
  modsecurity_rules_file /etc/modsecurity/modsecurity.conf;

  # 설치/유지보수 경로 노출 방지(있다면)
  #location ^~ /mw-config/    { return 403; }
  #location ^~ /maintenance/  { return 403; }

  # --- 정적/리소스: ModSec off + 캐시 ---
  location ^~ /w/resources/ {
    modsecurity off;
    expires 7d;
    add_header Cache-Control "public, max-age=604800";
    proxy_pass http://mw_backend;
  }

  location ^~ /w/skins/ {
    modsecurity off;
    expires 7d;
    add_header Cache-Control "public, max-age=604800";
    proxy_pass http://mw_backend;
  }

  location ^~ /images/ {
    modsecurity off;
    expires 7d;
    add_header Cache-Control "public, max-age=604800, immutable";
    proxy_pass http://mw_backend;
  }

  # ResourceLoader: 대량 쿼리스트링/압축 응답, 오탐 방지 위해 보수적
  location = /w/load.php {
    modsecurity off;
    proxy_pass http://mw_backend;
  }

  # --- API & 인덱스: 세밀 조정 ---
  # 로그인/클라이언트로그인 등만 레이트리밋 강화
  location ~ ^/w/(?:index\.php|api\.php)$ {
    # 기본은 on

    # PHP 업로드 크기와 보조 맞춤 (필요 시만 상향)
    # 기본 128m, 대용량 업로드 필요 시 해당 경로에서만 증액
    # modsecurity_rules 'SecRequestBodyLimit 134217728';
    # modsecurity_rules 'SecRequestBodyNoFilesLimit 134217728';

    # MediaWiki 특유 필드에 대한 타깃 제외 (XSS/SQLi 오탐 완화)
    # - 편집 본문: wpTextbox1
    # - 요약: wpSummary
    # - API: text, summary, comment, tags 등
    modsecurity_rules '
      SecRuleEngine On

      # 941100(XSS)
      SecRuleUpdateTargetById 941100 "!ARGS:wpTextbox1"
      SecRuleUpdateTargetById 941100 "!ARGS:wpSummary"
      SecRuleUpdateTargetById 941100 "!ARGS:text"
      SecRuleUpdateTargetById 941100 "!ARGS:summary"
      SecRuleUpdateTargetById 941100 "!ARGS:comment"
      SecRuleUpdateTargetById 941100 "!ARGS:tags"

      # 942100/942430(SQLi) — 텍스트성 파라미터만 제한적으로 제외
      SecRuleUpdateTargetById 942100 "!ARGS:wpTextbox1"
      SecRuleUpdateTargetById 942100 "!ARGS:text"
      SecRuleUpdateTargetById 942430 "!ARGS:wpTextbox1"
      SecRuleUpdateTargetById 942430 "!ARGS:text"
    ';

    proxy_pass http://mw_backend;
  }

  # 그 외 모든 경로: 기본 on
  location / {
    proxy_pass http://mw_backend;
  }
}

# ---------- Grafana (reader) ----------
server {
  listen 80;
  server_name grafana.lucky-gun.com;

  # 기본: ModSecurity ON + 기본 룰셋
  modsecurity on;
  modsecurity_rules_file /etc/modsecurity/modsecurity.conf;

  # ----------------------------------------------------
  # 공통 보강(서버 전역) : 바디/정규식 제한 상향, 타임아웃 여유
  # ----------------------------------------------------
  modsecurity_rules '
    SecRuleEngine On
    # 대용량 쿼리/대시보드 저장 대응
    SecRequestBodyLimit            25165824
    SecRequestBodyNoFilesLimit     10485760
    SecPcreMatchLimit              150000
    SecPcreMatchLimitRecursion     150000
  ';
  proxy_read_timeout  600s;
  proxy_send_timeout  600s;

  # ----------------------------------------------------
  # 1) 헬스체크: 문제 진단용 (WAF 우회 + 캐시)
  # ----------------------------------------------------
  location = /api/health {
    modsecurity off;
    add_header Cache-Control "max-age=5,public";
    proxy_pass http://gf_backend;
  }

  # ----------------------------------------------------
  # 2) 관리자 경로: 보수적으로 (WAF 완화 없음)
  #    - Traefik에서 /api/admin 은 별도 라우터 + IP 화이트리스트 권장
  #    - 여기서는 전역 WAF 그대로 유지
  # ----------------------------------------------------
  location ^~ /api/admin {
    proxy_pass http://gf_backend;
  }

  # ----------------------------------------------------
  # 3) 로그인/토큰 경로: 보수적으로 (필요시 레이트리밋)
  #    - limit_req_zone은 http{}에 정의 필요(예시)
  #      limit_req_zone $binary_remote_addr zone=grafana_login:10m rate=5r/s;
  # ----------------------------------------------------
  location ~ ^/(login|api/login|oauth) {
    # 필요 시 활성화:
    # limit_req zone=grafana_login burst=10 nodelay;
    proxy_pass http://gf_backend;
  }

  # ----------------------------------------------------
  # 4) 쿼리/프록시/WS 등 기술적 예외가 필요한 경로: "정밀 튜닝"
  #    - 전역 해제 금지
  #    - 특정 룰 + 특정 필드/조건으로만 예외
  # ----------------------------------------------------

  # 4-1) /api/ds/query : JSON expr 필드에서 자주 나는 오탐만 타겟팅 제외
  location = /api/ds/query {
    proxy_pass http://gf_backend;
    proxy_http_version 1.1;

    modsecurity_rules '
    SecRuleEngine On

    # ── 이 location에서만 바디 한도(2MB)
    SecRequestBodyLimit 2097152
    SecRequestBodyNoFilesLimit 2097152

    # ── 타깃 축소: targets[*].expr만 942440/941100에서 제외
    SecRuleUpdateTargetById 942440 "!ARGS:targets"
    SecRuleUpdateTargetById 942440 "!ARGS:targets[*].expr"
    SecRuleUpdateTargetById 941100 "!ARGS:targets"
    SecRuleUpdateTargetById 941100 "!ARGS:targets[*].expr"

    # ── POST + JSON + 정확 URI 일치시에만 임시 룰 해제
    SecRule REQUEST_METHOD "@streq POST" "id:900110,phase:1,nolog,pass,chain"
    SecRule REQUEST_HEADERS:Content-Type "@contains application/json" "chain"
    SecRule REQUEST_URI "@streq /api/ds/query" "t:none,ctl:ruleRemoveById=942440,ctl:ruleRemoveById=941100"
    ';
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
  }

  # 4-2) /api/datasources/proxy : 백엔드별로 오탐이 잦다면 위치 한정 최소 해제
  location ^~ /api/datasources/proxy {
    proxy_pass http://gf_backend;
    proxy_http_version 1.1;
    modsecurity on;

    # 예: 특정 룰이 지속 충돌할 때만 URI 한정으로 최소 해제 (최후수단)
    # modsecurity_rules '
    #   SecRuleEngine On
    #   SecRule REQUEST_URI "@beginsWith /api/datasources/proxy" \
    #     "id:900200,phase:1,pass,ctl:ruleRemoveById=942440"
    # ';
  }

  # 4-3) WebSocket/실시간: WAF ON 유지, 필요 최소만 완화
  location ~ ^/api/(live/ws|annotations|search) {
    proxy_pass http://gf_backend;
    proxy_http_version 1.1;
    modsecurity on;

    # 기본은 WAF 유지. 충돌 Rule 있으면 위의 ds/query와 같은 "필드/조건 한정" 방식으로만 완화.
    # modsecurity_rules ' ... '
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
  }

  # ----------------------------------------------------
  # 5) 정적 리소스: 캐시 힌트(선택)
  # ----------------------------------------------------
  location ~* \.(?:css|js|woff2?|ttf|eot|svg)$ {
    expires 7d;
    access_log off;
    proxy_pass http://gf_backend;
  }

  # ----------------------------------------------------
  # 6) 기본 경로: 전역 해제 없이 WAF 유지
  #    - CSP/XFO 등 보안 헤더는 Traefik에서만 설정(중복/충돌 방지)
  # ----------------------------------------------------
  location / {
    modsecurity on;
    proxy_pass http://gf_backend;
  }
}

#server {
#  listen 80 default_server;
#  server_name _;

  # 이 서버에서는 모드시큐리티 항상 ON
#  modsecurity on;
#  modsecurity_rules_file /etc/modsecurity/modsecurity.conf;

  # 핑 엔드포인트: 바디 없이 204 반환 (업스트림 불필요)
#  location = /__modsec_ping__ { return 204; }

  # 그 외엔 간단히 200 OK
#  location / { return 200 "ok\n"; }
#}

# fallback 처리
server {
  listen 80 default_server;
  return 444;
}
